[0 ]: 程序 --> 程序体 .
[1 ]: 程序体 --> 声明 程序体
[2 ]: 程序体 --> 语句
[3 ]: 声明 --> 常量定义
[4 ]: 声明 --> 变量定义
[5 ]: 声明 --> 过程
[6 ]: 常量定义 --> const 常量名表 ;
[7 ]: 常量名表 --> ident = number 余常量名表
***[7 ]: 常量名表 --> 变量常量名 = 常量值 余常量名表
[8 ]: 余常量名表 --> , 常量名表
[9 ]: 余常量名表 --> epsilon
[10]: 变量定义 --> var 变量名表 ;
[11]: 变量名表 --> ident 余变量名表
***[11]: 变量名表 --> 变量常量名 余变量名表
[12]: 余变量名表 --> , 变量名表
[13]: 余变量名表 --> epsilon
[14]: 过程 --> procedure ident ; 程序体 ;
***[14]: 过程 --> procedure ident ( 参数表 ) ; 程序体 ;
[15]: 条件 --> odd 表达式
[16]: 条件 --> 表达式 余条件
[17]: 余条件 --> = 表达式
[18]: 余条件 --> != 表达式
[19]: 余条件 --> < 表达式
[20]: 余条件 --> > 表达式
[21]: 余条件 --> <= 表达式
[22]: 余条件 --> >= 表达式
[23]: 表达式 --> 项 余表达式
[24]: 项 --> 因子 余项
[25]: 余表达式 --> + 项 余表达式
[26]: 余表达式 --> - 项 余表达式
[27]: 余表达式 --> epsilon
[28]: 因子 --> ident
***[28]: 因子 --> 变量常量名
[29]: 因子 --> number
[30]: 因子 --> - 表达式
***[30]: 因子 --> - 因子
[31]: 因子 --> ( 表达式 )
[32]: 余项 --> * 因子 余项
[33]: 余项 --> / 因子 余项
[34]: 余项 --> epsilon
[35]: 语句序列 --> 语句 ; 语句序列
[36]: 语句 --> ident := 表达式
***[36]: 语句 --> 变量常量名 := 表达式
[37]: 语句 --> call ident
***[37]: 语句 --> call ident ( 可空名表 )  //变量名表里是可以有常量的，也可以由数组元素的
[38]: 语句 --> begin 语句序列 end
[39]: 语句 --> if 条件 then 语句
***[39]: 语句 --> if 逻辑式 then 语句 ; 余分支 endif
[40]: 语句 --> while 条件 do 语句
***[40]: 语句 --> while 逻辑式 do 语句

----------------------------------------------------------------
[41]: 语句 --> do 语句 ; while 逻辑式
[42]: 语句 --> return 表达式
[43]: 变量常量名 --> ident 数组后缀
[44]: 数组后缀 --> [ number ] 二维后缀
[45]: 数组后缀 --> epsilon
[46]: 二维后缀 --> [ number ]
[47]: 二维后缀 --> epsilon
[48]: 常量值 --> 整数
[49]: 常量值 --> { 数或向量表 }
[50]: 整数 --> number
[51]: 整数 --> - number
[52]: 数或向量表 --> 向量表     //二维表
[53]: 数或向量表 --> 整数表     //一维表
[54]: 向量表 --> 向量 余向量表
[55]: 向量 --> { 整数表 }
[56]: 余向量表 --> , 向量表
[57]: 余向量表 --> epsilon
[58]: 整数表 --> 整数 余整数表
[59]: 余整数表 --> , 整数表
[60]: 余整数表 --> epsilon
[61]: 余分支 --> elif 逻辑式 then 语句 ; 余分支
[62]: 余分支 --> else 语句 ;
[63]: 余分支 --> epsilon
[64]: 参数表 --> ident 余参数表      //参数只能是变量，不能是数组
[65]: 余参数表 --> , 参数表
[66]: 余参数表 --> epsilon
[67]: 逻辑式 --> 与式 余逻辑式
[68]: 余逻辑式 --> || 与式 余逻辑式
[69]: 余逻辑式 --> epsilon
[70]: 与式 --> 条件 余与式
[71]: 余与式 --> && 条件 余与式
[72]: 余与式 --> epsilon
[73]: 条件 --> ! 条件
[74]: 参数表 --> epsilon
[75]: 语句 --> print 变量常量名
[76]: 可空名表 --> 变量名表
[77]: 可空名表 --> epsilon
[78]: 语句序列 --> epsilon

---------------------------词法符号及文法符号------------------------
加入的词法符号:
&&          TOKEN_AND       G_AND
||          TOKEN_OR        G_OR
!           TOKEN_NOT       G_NOT
[           TOKEN_LSQUARE   G_LSQUARE
]           TOKEN_RSQUARE   ...
{           TOKEN_LCURLY
}           TOKEN_RCURLY
return      TOKEN_RETURN
else        TOKEN_ELSE
elif        TOKEN_ELIF
endif       TOKEN_ENDIF

加入的文法符号:

中文名      枚举名              英文名              简称
变量常量名  G_VAR_CONST_NAME    var_const_name      VCN
数组后缀    G_ARRAY_SUFFIX      array_suffix        AS
二维后缀    G_2D_SUFFIX         array_2d_suffix     2DS
常量值      G_CONST_VALUE       const_value         CV
整数        G_INTEGER           integer             I
数或向量表  G_VECS_OR_SCALARS   vecs_or_scalars     VOS
向量表      G_VECTOR_TABLE      vector_table        VS
向量        G_VECTOR            vector              VEC
余向量表
整数表      G_INTEGER_TABLE     integer_table       IS
余整数表
余分支      G_EX_BRANCH         ex_branch           EBR
参数表      G_ARG_TABLE         arg_table           AT
余参数表
逻辑式      G_LOGICAL_EXPR      logical_expr        LE
余逻辑式
与式        G_AND_EXPR          and_expr            AE
余与式


---------------------------各新增功能对应产生式----------------------
增加数组:
7、11、28、36、43~60

增加逻辑运算符:
39、40、41、67~73

增加返回值:
42

增加else/elif:
39、61~63

增加do while:
41

增加参数传递:
14、37、64~66

增加负数:
30、50、51

----------------------------原修改方案-------------------------------
[]: 算逻式 --> 与式 余算逻式
[]: 余算逻式 --> || 与式 余算逻式
[]: 余算逻式 --> epsilon
[]: 与式 --> 条件 余与式
[]: 余与式 --> && 条件 余与式
[]: 余与式 --> epsilon
[]: 条件 --> ! 条件

